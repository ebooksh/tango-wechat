<style lang="scss">
	@import "../../styles/variable";

	.search {
		padding: 20rpx 30rpx;
		&__inner {
			position:relative;
			height:80rpx;
			line-height:80rpx;
			background:$borderColor;
			border-radius:40rpx;
			// box-shadow:0 0 10px #afafaf;
			border: 1px solid $borderColor;
			padding:0 30rpx;
		}
		&__placeholder {
			color: $lighterColor;
			font-size:32rpx;
		}
		&__icon {
			width: 50rpx;
			height: 50rpx;
			position: absolute;
			right: 30rpx;
			top: 50%;
			transform: translateY(-50%);
		}
	}
	.topping {
		padding: 20rpx 60rpx;
		overflow: hidden;

		&__cover {
			width: 168rpx;
			height: 232rpx;
			margin-right: 30rpx;
			float: left;
		}
		&__profile {
			overflow: hidden;
		}
		&__name {
			font-size: 32rpx;
			margin-top: 10rpx;
			margin-bottom:6rpx;
		}
		&__word-count {
			color: $lighterColor;
			font-size: 24rpx;
		}
		&__studying {
			display: inline-block;
			margin-top: 20rpx;
			color: $highlightColor;
		}
		&__description {
			color: $lighterColor;
			font-size: 24rpx;
		}
	}
	.section-hint {
		margin-bottom: 30rpx;
		margin-right: 50rpx;
		margin-left: 50rpx;
		margin-top: 30rpx;
		padding-bottom: 20rpx;
		border-bottom: 1px solid $borderColor;
		color: $lighterColor;
		text-align: right;
	}
	.books {
		padding: 0 30rpx;
		display: flex;
		flex-wrap: wrap;
		align-items: stretch;
	}
	.book {
		overflow: hidden;
		text-align: center;
		padding: 20rpx;
		box-sizing:border-box;
		width: 33.3333%;

		&--studying {

		}
		&__cover {
			width: 168rpx;
			height: 232rpx;
		}
		&__profile {
			
		}
		&__name {
			font-size: 26rpx;
			white-space:nowrap;
			overflow:hidden;
			text-overflow:ellipsis;
		}
		&__word-count {
			color: $lightColor;
			font-size: 24rpx;
		}

		&--limit {
			.book__cover {
				filter:grayscale(100);
			}
		}
	}
</style>
<template>
    <view>
    	<view class="search">
    		<view class="search__inner" @tap="handleNavigateToSearch">
	    		<text class="search__placeholder">假名/汉字/意思</text>
	    		<image class="search__icon" src="../../images/icons/search.png"></image>
    		</view>
    	</view>
    	<view class="section-hint" wx:if="{{readingBook != null}}">
    		正在学
    	</view>
    	<view class="topping" wx:if="{{readingBook != null}}">
    		<image class="topping__cover" height="100" width="100" src="{{readingBook.imageUrl}}"></image>
    		<view class="topping__profile">
    			<view @tap="handleNavigateToBook({{readingBook}})">
	    			<view class="topping__name">{{readingBook.name}}</view>
	    			<view class="topping__word-count">
	    				<text>共{{readingBook.unitCount}}个单元</text>
	    				<text style="margin-left: 20rpx">{{readingBook.wordCount}}个单词</text>
	    			</view>
	    			<view class="topping__description">
	    				{{readingBook.description}}
	    			</view>
    			</view>
    			<view wx:if="{{readingBook.readingUnit != null}}" class="topping__studying" @tap="handleNavigateToUnit({{readingBook.readingUnit}})">
    				继续学习 {{readingBook.readingUnit.name}}
    			</view>
    		</view>
    	</view>
    	<view class="section-hint">
    		更多
    	</view>
    	<view class="books">
    		<view class="book" wx:for="{{bookList}}" wx:key="id" @tap="handleNavigateToBook({{item}})">
    			<image class="book__cover" src="{{item.imageUrl}}"></image>
    			<view class="book__profile">
    				<view class="book__name">{{item.name}}</view>
    				<view class="book__word-count">单词数：{{item.wordCount}}</view>
    			</view>
    		</view>
    	</view>
    </view>
</template>


<script>
    import wepy from 'wepy'
    import bookApi from '../../apis/book'
    import Tips from '../../utils/Tips'
    import Cache from '../../utils/Cache'

    export default class Home extends wepy.page {
        data = {
        	readingBook: null,
        	bookList: []
        }

        methods = {
        	handleNavigateToSearch(e) {
	        	wx.navigateTo({
	        		url: '/pages/search/index'
	        	})	
        	},
        	handleNavigateToUnit(unit) {
        		wx.navigateTo({
        			url: `/pages/book/unit?bookId=${unit.bookId}&unitId=${unit.id}`
        		})
        	},
        	handleNavigateToBook(book) {
        		wx.navigateTo({
        			url: `/pages/book/index?bookId=${book.id}`
        		})
        	}
        }

        async loadData () {
        	let { resourceUrl } = this.$parent.globalData

        	let promsie = bookApi.getAll()
        	let resp = await promsie
        	if (!resp.success) {
        		Tips.error(resp.message)
        		return
        	}
        	this.bookList = resp.data.map(book => {
        		book.imageUrl = `${resourceUrl}${book.imageUrl}`
        		return book
        	})
        	this.$apply()
        }

        onShow() {
        	let readingBook = Cache.getReadingBook()
        	if (readingBook) {
        	    this.readingBook = readingBook
        	} else {
        		this.readingBook = null
        	}
        }

        onLoad () {
        	this.loadData()
        }
    }
</script>
