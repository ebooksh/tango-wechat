<style lang="scss">
    @import "../../styles/variable";

    .search {
        padding: 20rpx 0;
        display: flex;
        justify-content: center;
        align-items: center;

        &__placeholder {
            color: $lighterColor;
            font-size: 32rpx;
        }
        &__wrapper {
            flex-grow: 1;
            padding-left: 30rpx;
        }
        &__cancel {
            flex-grow: 0;
            // width: 90rpx;
            padding: 0 30rpx;
            font-size: 32rpx;
            text-align: right;
        }
        &__input {
            position:relative;
            height:80rpx;
            line-height:80rpx;
            background:$borderColor;
            border-radius:40rpx;
            padding:0 30rpx;
        }
    }
    .completion {
        padding:16rpx;
        text-align:center;
        font-size:24rpx;
    }
</style>
<template>
    <view>
    	<view class="search">
            <view class="search__wrapper">
                <input 
                    focus="true"
                    confirm-type="search"
                    class="search__input" 
                    type="text" 
                    placeholder-class="search__placeholder"
                    value="{{keyword}}" 
                    @input="handleInput"
                    placeholder="假名/汉字/意思">
            </view>
            <view class="search__cancel color-primary" @tap="handleCancel">取消</view>
        </view>
        <view class="list list--word">
            <view class="list-item list-item--word" wx:for="{{wordList}}" wx:key="id">
                <view class="list-item--word__prounce-wrapper" @tap="handleProunce({{item}})">
                    <image class="{{ playing && playingWordId === item.id ? 'list-item--word__prounce-audio list-item--word__prounce-audio--playing' : 'list-item--word__prounce-audio'}}" src="../../images/icons/prounce-audio.png"></image>
                </view>
                <view class="list-item--word__detail-wrapper" @tap="handleNavigateToWord({{item}})">
                    <view class="left">
                        <view class="list-item__title">{{item.kana}}</view>
                        <view class="list-item__subtitle">{{item.kanji}}</view>
                    </view>
                    <view class="right">
                        <text class="list-item--word__type">{{item.type ? '['+item.type+']' : ''}}</text>
                        <text class="list-item--word__explantion">{{item.explanation}}</text>
                    </view>
                </view>
            </view>
        </view>
        <view class="completion" wx:if="{{keyword != '' && loading == false}}">
            <view class="search-online" style="color: #b0b0b0;">没有数据</view>
        </view>
    </view>
</template>


<script>
    import wepy from 'wepy'
    import wordApi from '../../apis/word'
    import Tips from '../../utils/Tips'

    let innerAudioContext

    export default class SearchIndex extends wepy.page {
        data = {
            playing: false,
            wordList: [],
            playingWordId: '',
            keyword: '',
            loading: false
        }

        methods = {
            handleNavigateToWord (word) {
                wx.navigateTo({
                    url: `/pages/word/index?bookId=${word.bookId}&wordId=${word.id}&multiple=0`
                })
            },
            handleProunce (word) {
                if (this.playing) {
                    return
                }
                let { prounceUrl } = this.$parent.globalData
                this.playing = true
                this.playingWordId = word.id
                innerAudioContext.src = prounceUrl + '?outputFormat=mp3&text=' + word.kana
                innerAudioContext.play()
            },
            handleInput (e) {
                this.keyword = e.detail.value
                if (this.timer) {
                    clearTimeout(this.timer)
                }
                if (this.keyword == '') {
                    this.wordList = []
                    return
                }
                this.loading = true
                this.timer = setTimeout(_ => {
                    wordApi.search({keyword: this.keyword}).then(response => {
                        this.loading = false
                        if (!response.success) {
                            Tips.error(response.message)
                            return
                        }
                        this.wordList = response.data
                        this.$apply()
                    }).catch(err => {
                        this.loading = false
                        Tips.error(err)
                        this.$apply()
                    })
                }, 600)
            },
            handleCancel (e) {
                this.keyword = ''
                this.wordList = []
            }
        }

        onLoad (option) {
            if (innerAudioContext != null) {
                innerAudioContext.destroy()
            }
            innerAudioContext = wx.createInnerAudioContext()
            innerAudioContext.onEnded(() => {
                this.playing = false
                this.playingWordId = ''
                this.$apply()
            })
        }
    }
</script>
